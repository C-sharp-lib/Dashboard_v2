@using Dash.Areas.Admin.Models
@model JobsPaginateViewModel

@{
    Layout = "_Layout";
}
<div class="row mt-7 mb-7 p-7">
    <div class="col-12 col-md-12">
        <div class="card shadow-lg card-background-color">
            <div class="card-header bg-gradient-dark" style="display: flex; justify-content: space-between; align-items: center">
                <h1 class="violet-text maven-pro-title">All Jobs</h1>
                <div class="btn-group text-sm">
                    <a class="btn bg-gradient-dark green-text shadow-md ubuntu-bold btn-tooltip" asp-action="AddJobPage"
                       asp-controller="Job" asp-area="Admin" title="Add a new Job"><i
                            class="fa-solid fa-plus"></i></a>
                    <a class="btn bg-gradient-dark orange-text shadow-md ubuntu-bold btn-tooltip" asp-action="Index"
                       asp-controller="Dashboard" asp-area="Admin" title="Go back to admin dashboard"><i class="fa-solid fa-table-columns"></i></a>
                </div>
            </div>
            <div class="card-body p-3">
                <div class="row mt-3 mb-3" style="display: flex; justify-content: space-between; align-items: center">
                    <div class="col-12 col-md-6">
                        <div class="search">
                            <form class="d-flex" role="search">
                                <div class="input-group">
                                    <input type="text" id="searchBox" class="form-control color-background background text-white ubuntu-bold" placeholder="Search jobs... " />
                                    <button class="btn violet text-white ubuntu-bold btn-rounded btn-lg" type="button" onclick="filterTable()">Search</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                       
                    </div>
                </div>
                <div class="table-container">
                <table class="table table-full-width table-striped table-borderless table-hover table-responsive table-responsive-sm table-responsive-md table-responsive-lg">
                    <thead>
                    <tr class="text-center">
                        <th class="green-text ubuntu-bold">ID</th>
                        <th class="green-text ubuntu-bold">User</th>
                        <th class="green-text ubuntu-bold">Title</th>
                        <th class="green-text ubuntu-bold">Priority</th>
                        <th class="green-text ubuntu-bold">Status</th>
                        <th class="green-text ubuntu-bold">Time Frame</th>
                        <th class="green-text ubuntu-bold">Created</th>
                        <th class="green-text ubuntu-bold">Updated</th>
                        <th class="green-text ubuntu-bold">Actions</th>
                    </tr>
                    </thead>
                    <tbody id="jobTableBody">
                    @foreach (var jobs in Model.UserJobs)
                    {
                        <tr class="text-center text-sm">
                            <td class="text-white ubuntu">@jobs.Job.JobId</td>
                            <td class="text-white ubuntu">
                                <div class="d-flex px-2 py-1">
                                    <div>
                                        <img src="@Url.Content($"~/Uploads/AppUsers/{jobs.User.ImageUrl}")" class="avatar avatar-sm me-3" alt="Picture of @jobs.User.UserName">
                                    </div>
                                    <div class="d-flex flex-column justify-content-center">
                                        <p class="text-white ubuntu text-xs mb-0">@jobs.User.FirstName @jobs.User.LastName</p>
                                        <p class="text-white ubuntu text-xs mb-0">@jobs.User.UserName</p>
                                    </div>
                                </div>
                            </td>
                            <td class="text-white ubuntu">@jobs.Job.TruncateWords(jobs.Job.Title, 3)</td>
                            <td class="text-white ubuntu">@jobs.Job.Priority</td>
                            <td class="text-white ubuntu">@jobs.Job.Status</td>
                            <td class="text-white ubuntu">@jobs.Job.StartDate.ToString("d") - @jobs.Job.EndDate.ToString("d")</td>
                            <td class="text-white ubuntu">@jobs.Job.CreatedAt.ToString("d")</td>
                            <td class="text-white ubuntu">@jobs.Job.UpdatedAt.ToString("d")</td>

                            <td class="btn-group">
                                <a asp-action="JobDetails" asp-controller="Job" asp-area="Admin" asp-route-id="@jobs.UserJobId" title="View ID: @jobs.UserJobId" class="btn bg-gradient-dark btn-sm text-info shadow-md ubuntu-bold btn-tooltip"><i class="fa-solid fa-list text-gradient text-info text-sm"></i></a>
                                <a asp-action="UpdateJobPage" asp-controller="Job" asp-area="Admin" asp-route-id="@jobs.UserJobId" title="Update ID: @jobs.UserJobId" class="btn bg-gradient-dark btn-sm text-warning shadow-md ubuntu-bold btn-tooltip"><i class="fa-solid fa-pen-to-square text-gradient text-warning text-sm"></i></a>
                                <form asp-action="DeleteJob" asp-controller="Job" asp-route-id="@jobs.UserJobId" asp-area="Admin" method="post">
                                    <button type="submit" class="btn bg-gradient-dark btn-sm text-danger shadow-md ubuntu-bold btn-tooltip" title="Delete ID: @jobs.UserJobId"><i class="fa-solid fa-trash text-gradient text-danger text-sm"></i></button>
                                </form>
                            </td>
                        </tr>
                        
                    }
                    </tbody>
                </table>
                </div>
                </div>
            <div class="card-footer mt-3 mb-2">
                <div>
                    <nav class="mx-auto">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "paginationBtns")">
                                <a class="page-link" href="#" onclick="changePage(@(Model.CurrentPage - 1))"><i class="fa-solid fa-left-long"></i></a>
                            </li>
                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(Model.CurrentPage == i ? "pageStart" : "otherPages")">
                                    <a class="page-link" href="javascript:void(0);" onclick="loadPage(@i, this)">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "paginationBtns")">
                                <a class="page-link" href="#" onclick="changePage(@(Model.CurrentPage + 1))"><i class="fa-solid fa-right-long"></i></a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function changePage(page) {
            window.location.href = '@Url.Action("Index", "Job", new {area="Admin"})' + '?page=' + page;
        }
    </script>
 
    <script>
        function filterTable() {
            let input = document.getElementById("searchBox").value.toLowerCase();
            let rows = document.querySelectorAll("#jobTableBody tr");

            rows.forEach(row => {
                let username = row.cells[0].textContent.toLowerCase();
                let title = row.cells[1].textContent.toLowerCase();
                row.style.display = (username.includes(input) || title.includes(input)) ? "" : "none";
            });
        }
    </script>
    <script type="text/javascript">
        function loadPage(page, element) {
            fetch(`/Admin/Job/Index?page=${page}`)
                .then(response => response.text())
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const newTableBody = doc.querySelector("#jobTableBody").innerHTML;
                    document.querySelector("#jobTableBody").innerHTML = newTableBody;
                    document.querySelectorAll(".pagination .page-item").forEach(item => {
                        item.classList.remove("pageStart");
                        item.classList.add("otherPages");
                    })
                    element.parentElement.classList.add("pageStart");
                    element.parentElement.classList.remove("otherPages");
                })
                .catch(error => console.error("Error loading page:", error));
        }
    
    </script>
    
}